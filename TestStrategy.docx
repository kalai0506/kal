1.	Testing Strategy Overview
This Testing Strategy provides a high level approach to the project’s automation.  The strategy looks at the technology used, behavior, stability & characteristics of the system to be built, the project time line of the testing effort.  

1.1.	Objectives
The key objective is to automate the following user story: "As a first time user when I search for an event on ticketfly.com, I should be able to see the event in search results so that I can proceed to the event landing page and cart a ticket."

1.2.	Testing Environment
Web application on Internet – www.ticketfly.com

1.3.	Testing Level
Regression 

1.4.	Scope
In scope - Search & add ticket for an event in cart and verify the number of tickets added
Out of scope – Cart Check out, payment and ticket generation

1.5.	Constraints
Time constraint
Application response time

1.6.	Tools Used:
1.	Automation Tools – Selenium Web driver
Selenium Web driver supports most of the functionality for web based application & it is open source.
2.	IDE – Eclipse
3.	Maven for dependability management
4.	Language – JAVA
5.	Browsers – Chrome & Firefox
1.7.	Configuration Management:
Git hub will be used for configuration management.
1.8.	Task Overview:
1.	Go to www.ticketfly.com home page.
2.	Choose an event in the banner or the scrolling events
3.	Enter the event name in the find event search box and click find button
4.	Search page will display the matching events
5.	Select the first event and click on Get Ticket button
6. 	Add ticket page will be displayed.
7.  	Get the maximum number of tickets allowed for booking.
8. 	Generate a random number between 1 to max number of tickets allowed.
9. 	Add the tickets based on the random number generated.
10. 	Click Get Ticket button to add the tickets to the cart
11. 	The delivery page will be displayed.
12. 	verify the number of tickets in the cart and random number are equal.
13. 	If equal, mark the test case as pass or fail. 

1.9.	Key Deliverables:
1.	Automated test scripts bundled with its dependencies
2.	Help document for running automated test script

1.10.	Critical success factor:
In addition to the success execution of happy path, the following needs to be considered.
1.	Multiple rounds of regression testing needs to be performed on different time/days to make sure application chooses different events, running with all of the random numbers between 1 to 10.
2.	Test to be performed in multiple browsers – Chrome & Firefox
